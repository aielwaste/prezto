#
# Executes commands at login pre-zshrc.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Andrew Bell <andrewbell8@gmail.com>
#

if [[ -d "~/Dropbox/bin" ]]; then
  rm -rf "~/bin" && ln -sd ~/Dropbox/bin ~/bin
fi

if [[ $OSTYPE == *darwin* ]]; then

  if [[ -f "$HOME"/.secrets ]]; then
    source "$HOME"/.secrets
  fi

  export BROWSER='open'

  #
  # homebrew
  #

  export HOMEBREW_GITHUB_API_TOKEN="$MY_BREW_TOKEN"

  if [[ -z $(which brew) ]]; then
    #install homebrew
    function install_homebrew() {
      ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    }

    install_homebrew
  fi
  export PATH="$(brew --prefix coreutils)/libexec/gnubin:/usr/local/bin:$PATH"
  export MANPATH="$(brew --prefix coreutils)/libexec/gnuman:/usr/local/share/man:$MANPATH"

  #
  # Java
  #

  JAVA_HOME="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"
  CLASSPATH=".:$HOME/Library/Java/junit.jar:$CLASSPATH"
  export JAVA_HOME JAVA_OPTS CLASSPATH

  #
  # fpath
  #

  path=(
    $HOME/bin
    /usr/local/{bin,sbin}
    $path
  )


elif [[ $OSTYPE == *linux* ]] && [[ $(uname -r) == *ARCH* || $(uname -r) == *MANJARO* ]] ; then
  export BROWSER='xdg-open'

  #
  # fpath
  #

  path=(
    $HOME/bin
    /usr/{bin,sbin}
    $path
  )
fi

#
# Gnupg
#

GPG_TTY=$(tty)
export GPG_TTY
export MYGPGKEY=37D280F9

#
# Powerlevel9k
#

export POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir pyenv vcs)
export POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs)

#
# Editors
#

export PAGER='less'
export EDITOR='subl -n -w'
export VISUAL="$EDITOR"
export GIT_EDITOR='subl -n -w'
export SVN_EDITOR="$GIT_EDITOR"
export HG_EDITOR="$GIT_EDITOR"
export HOMEBREW_EDITOR="$GIT_EDITOR"
export ___FULLUSERNAME___="Andrew Bell"
export ___ORGANIZATIONNAME___="Fr1v"
export SNIPPET_AUTHOR="Andrew Bell"


#
# Rbenv
#

if [[ -d "$HOME/.rbenv" ]]; then
  export PROJECT_HOME="${ZDOTDIR:-$HOME}"/code
  export RBENV_ROOT="${ZDOTDIR:-$HOME}"/.rbenv
  export RBENV_DIR="$PWD"
  export PATH="$RBENV_ROOT/bin:$PATH"

  # rbenv init
  if which rbenv > /dev/null; then
    eval "$(rbenv init -)"
  fi

  # rbenv completions
  if [[ -f "$HOME/.rbenv/completions/rbenv.zsh" ]]; then
    source "$HOME/.rbenv/completions/rbenv.zsh"
  fi
fi

#
# pyenv
#

if [[ -d "$HOME/.pyenv" ]]; then
  export PYENV_ROOT="${ZDOTDIR:-$HOME}/.pyenv"
  export PYENV_DIR="$PWD"
  export PATH="$PYENV_ROOT/bin:$PATH"

  # pyenv init
  if which pyenv > /dev/null; then
    eval "$(pyenv init -)"
  fi

  # pyenv completions
  if [[ -f "$HOME/.pyenv/completions/pyenv.zsh" ]]; then
    source "$HOME/.pyenv/completions/pyenv.zsh"
  fi
fi


#
# pyenv-virtualenv
#

if which pyenv-virtualenv-init > /dev/null; then
  eval "$(pyenv virtualenv-init -)"
fi

export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'


#
# nodenv
#

if [[ -d "$HOME/.rbenv" ]]; then
  export NODENV_ROOT="${ZDOTDIR:-$HOME}"/.nodenv
  export NODENV_DIR="$PWD"
  export PATH="$NODENV_ROOT/bin:$PATH"

  # nodenv init
  eval "$(nodenv init -)"

  # nodenv completions
  if [[ -f "$HOME/.nodenv/completions/nodenv.zsh" ]]; then
    source "$HOME/.nodenv/completions/nodenv.zsh"
  fi
fi


#
# Rust
#

export RUST_SRC_PATH="$HOME/.multirust/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/rustlib/src/rust/src"
export PATH="$HOME/.cargo/bin:$PATH"


#
# Language
#

if [[ -z "$LANG" ]]; then
  export LANG='en_US.UTF-8'
fi

#
# Paths
#

# Ensure path arrays do not contain duplicates.
typeset -gU cdpath fpath mailpath path

# Set the the list of directories that cd searches.
# cdpath=(
#   $cdpath
# )


#
# Less
#

# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X and -F (exit if the content fits on one screen) to enable it.
export LESS='-F -g -i -M -R -S -w -X -z-4'

# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
if (( $#commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
fi

#
# Temporary Files
#

if [[ ! -d "$TMPDIR" ]]; then
  export TMPDIR="/tmp/$LOGNAME"
  mkdir -p -m 700 "$TMPDIR"
fi

TMPPREFIX="${TMPDIR%/}/zsh"
