#
# Executes commands at login pre-zshrc.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Andrew Bell <andrewbell8@gmail.com>
#


#
# homebrew token
#
export HOMEBREW_GITHUB_API_TOKEN="cc9f7eb85ff4e70424c9f16664d8b3c2d9dd2349"

#
# macos path setup
#

if [[ $OSTYPE == *darwin* ]]; then
    # Ensure path arrays do not contain duplicates.
    typeset -gU cdpath dfpath mailpath path

    if [[ -f "${ZDOTDIR:-$HOME}"/.secrets ]]; then
        source "${ZDOTDIR:-$HOME}"/.secrets
    fi

    #
    # fpath
    #

    path=(
        "${ZDOTDIR:-$HOME}"/bin
        /usr/local/{bin,sbin}
        $path
    )

    export BROWSER='open'

    #
    # homebrew
    #

    if [[ -z $(which brew) ]]; then
        install_brew
    fi

    export HOMEBREW_GITHUB_API_TOKEN="$MY_HOMEBREW_GITHUB_API_TOKEN"
    export PATH="$(brew --prefix coreutils)/libexec/gnubin:/usr/local/bin:$PATH"
    export MANPATH="$(brew --prefix coreutils)/libexec/gnuman:/usr/local/share/man:$MANPATH"

    #
    # Java
    #

    JAVA_HOME="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"
    CLASSPATH=".:$HOME/Library/Java/junit.jar:$CLASSPATH"
    export JAVA_HOME JAVA_OPTS CLASSPATH


    #
    # go
    #

    export GOPATH="$HOME"/.go
    export GOBIN="$GOPATH"/bin
    export PATH=$PATH:/usr/local/opt/go/libexec/bin


    #
    # nvm
    #

    export NVM_DIR="$HOME"/.nvm
    if [[ -s "$NVM_DIR"/nvm.sh ]]; then
        source "$NVM_DIR"/nvm.sh
    fi

    #
    # command-not-found
    #

    if brew command command-not-found-init > /dev/null 2>&1; then eval "$(brew command-not-found-init)"; fi


#
# linux path setup
#

elif [[ $OSTYPE == *linux* ]]; then

    # Ensure path arrays do not contain duplicates.
    typeset -gU cdpath fpath mailpath path

    export BROWSER='xdg-open'

    if [[ -f "${ZDOTDIR:-$HOME}"/.secrets ]]; then
        source "${ZDOTDIR:-$HOME}"/.secrets
    fi

    #
    # cargo
    #

    if [[ -f "${ZDOTDIR:-$HOME}"/.cargo/bin ]]; then
        PATH="${ZDOTDIR:-$HOME}"/.cargo/bin:"$PATH"; export PATH
    fi


    #
    # linuxbrew
    #

   if [[ -z $(which brew) ]] ; then
		 install_brew
	 fi

    # PATH="$HOME/.linuxbrew/bin:$PATH"
    # MANPATH="$(brew --prefix)/share/man:$MANPATH"
    # INFOPATH="$(brew --prefix)/share/info:$INFOPATH"
    # export PATH MANPATH INFOPATH
    # export HOMEBREW_BUILD_FROM_SOURCE=1

    #
    # fpath
    #
    fpath+=~/.zfunc

    path=(
        "${ZDOTDIR:-$HOME}"/bin
        /usr/{bin,sbin}
        $path
    )

    #
    # go
    #

    export GOPATH="$HOME"/.go
    export GOBIN="$GOPATH"/bin
    export PATH=$PATH:/usr/opt/go/libexec/bin


    #
    # nvm
    #

    export NVM_DIR="$HOME/.nvm"

    if [[ -s "$HOME/.linuxbrew/opt/nvm/nvm.sh" ]]; then
        source "$HOME/.linuxbrew/opt/nvm/nvm.sh"
    fi

    # nvm completion
    if [[ -s "$HOME/.linuxbrew/etc/bash_completion.d/nvm" ]]; then
        source "$HOME/.linuxbrew/etc/bash_completion.d/nvm"
    fi
fi


#
# Gnupg
#

GPG_TTY=$(tty)
MYGPGKEY="$MY_GPG_KEY"
QT_AUTO_SCREEN_SCALE_FACTOR=0
export GPG_TTY MYGPGKEY QT_AUTO_SCREEN_SCALE_FACTOR


#
# Editors
#

export PAGER=less
export EDITOR='subl -n -w'
export VISUAL=$EDITOR
export GIT_EDITOR=$VISUAL
export SVN_EDITOR=$VISUAL
export HG_EDITOR=$VISUAL
export HOMEBREW_EDITOR=$VISUAL
export ___FULLUSERNAME___="Andrew Bell"
export ___ORGANIZATIONNAME___="Fr1v"
export SNIPPET_AUTHOR="Andrew Bell"
export LANG=en_US.UTF-8
umask 022


#
# rbenv
#
#

if [[ -d "$HOME/.rbenv" ]]; then
    export PROJECT_HOME="${ZDOTDIR:-$HOME}"/code
    export RBENV_ROOT="${ZDOTDIR:-$HOME}"/.rbenv
    export RBENV_DIR="$PWD"
    export PATH="$RBENV_ROOT/bin:$PATH"

    # rbenv init
    if which rbenv > /dev/null; then
        eval "$(rbenv init -)"
    fi

    # rbenv completions
    if [[ -f "$HOME/.rbenv/completions/rbenv.zsh" ]]; then
        source "$HOME/.rbenv/completions/rbenv.zsh"
    fi
fi


#
# pyenv
#

if [[ -d "$HOME/.pyenv" ]]; then
    export PYENV_ROOT="${ZDOTDIR:-$HOME}/.pyenv"
    export PYENV_DIR="$PWD"
    export PATH="$PYENV_ROOT/bin:$PATH"

    # pyenv init
    if which pyenv > /dev/null; then
        eval "$(pyenv init -)"
    fi

    # pyenv completions
    if [[ -f "$HOME/.pyenv/completions/pyenv.zsh" ]]; then
        source "$HOME/.pyenv/completions/pyenv.zsh"
    fi
fi


#
# pyenv-virtualenv
#

if which pyenv-virtualenv-init > /dev/null; then
    eval "$(pyenv virtualenv-init -)"
fi

export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'



#
# Less
#

# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X and -F (exit if the content fits on one screen) to enable it.
export LESS='--tabs=4 --no-init --LONG-PROMPT --ignore-case --quit-if-one-screen --RAW-CONTROL-CHARS'

# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
if (( $#commands[(i)lesspipe(|.sh)] )); then
    export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
fi


#
# Temporary Files
#

if [[ ! -d "$TMPDIR" ]]; then
    export TMPDIR="/tmp/$LOGNAME"
    mkdir -p -m 700 "$TMPDIR"
fi

TMPPREFIX="${TMPDIR%/}/zsh"
